on: push
name: Run tests
jobs:
  # The `ci-result` job doesn't actually test anything - it just aggregates the
  # overall build status for bors, otherwise our bors.toml would need an entry
  # for each individual job produced by the job-matrix.
  #
  # Ref: https://github.com/rust-lang/crater/blob/9ab6f9697c901c4a44025cf0a39b73ad5b37d198/.github/workflows/bors.yml#L125-L149
  #
  # ALL THE SUBSEQUENT JOBS NEED THEIR `name` ADDED TO THE `needs` SECTION OF THIS JOB!
  ci-result:
    name: ci result
    runs-on: ubuntu-latest
    needs:
      - geo_types
      - geo
      - geo_postgis
      - geo_fuzz
      - coverage
      - bench
    steps:
      - name: Mark the job as a success
        if: success()
        run: exit 0
      - name: Mark the job as a failure
        if: "!success()"
        run: exit 1

  geo_types:
    name: geo-types
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: geo-types
    strategy:
      matrix:
        container_image: ["georust/geo-ci:rust-1.51", "georust/geo-ci:rust-1.52", "georust/geo-ci:rust-1.53"]
    container:
      image: ${{ matrix.container_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: cargo install cargo-all-features
      - run: cargo build-all-features
      - run: cargo test-all-features

  geo:
    name: geo
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: geo
    strategy:
      matrix:
        container_image: ["georust/geo-ci:rust-1.51", "georust/geo-ci:rust-1.52", "georust/geo-ci:rust-1.53"]
    container:
      image: ${{ matrix.container_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: cargo install cargo-all-features
      - run: cargo build-all-features
      - run: cargo test-all-features

  geo_postgis:
    name: geo-postgis
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: geo-postgis
    strategy:
      matrix:
        container_image: ["georust/geo-ci:rust-1.51", "georust/geo-ci:rust-1.52", "georust/geo-ci:rust-1.53"]
    container:
      image: ${{ matrix.container_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: cargo install cargo-all-features
      - run: cargo build-all-features
      - run: cargo test-all-features

  geo_fuzz:
    name: geo-fuzz
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: geo/fuzz
    strategy:
      matrix:
        container_image: ["georust/geo-ci:rust-1.51", "georust/geo-ci:rust-1.52", "georust/geo-ci:rust-1.53"]
    container:
      image: ${{ matrix.container_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: cargo build --bins

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    container:
      image: georust/geo-ci
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Generate code coverage
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Lcov
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
  bench:
    name: bench
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    container:
      image: georust/geo-ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: cargo bench --no-run

